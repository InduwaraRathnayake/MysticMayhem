import java.util.ArrayList;
import java.util.Collections;
import java.util.Comparator;
import java.util.List;

public class Battle {
    
    public void winWar(Player user, Player npc, boolean win){
        long newUserCoins;
        long newNpcCoins;
        if(win){
            newUserCoins = Math.round(user.getCoins() + npc.getCoins()*0.1);
            user.setCoins(newUserCoins);

            newNpcCoins = Math.round(npc.getCoins() - npc.getCoins()*0.1);
            npc.setCoins(newNpcCoins);
        }
        else{
            newUserCoins = Math.round(npc.getCoins() + user.getCoins()*0.1);
            npc.setCoins(newUserCoins);

            newNpcCoins = Math.round(user.getCoins() - user.getCoins()*0.1);
            user.setCoins(newNpcCoins);
        }
    }
//Healer < Mage < Mythical Creature < Knight < Archer
    private List<Army> piorityAttack(List<Army> setOfArmy){
        List<Army> sortedArmy = new ArrayList<>(); //{0,0,0,0,0,0}  A[0]=healer A={healer,0,0,0,Archer}

        for(int i=0; i<5; i++){
            sortedArmy.add(null);
        }
        for(Army ar : setOfArmy){
            if( ar instanceof Healer){
                sortedArmy.set(0, ar);
            }
            else if( ar instanceof Mage){
                sortedArmy.set(1, ar);
            }
            else if( ar instanceof MythicalCreature){
                sortedArmy.set(2, ar);
            }
            else if( ar instanceof Knight){
                sortedArmy.set(3, ar);
            }
            else{
                sortedArmy.set(4, ar);
            }
        }
        return sortedArmy;
    }

    //Mage < Knight< Archer < Mythical Creature < Healer
    private List<Army> piorityDefence(List<Army> setOfArmy){
        List<Army> sortedArmy = new ArrayList<>(); //{0,0,0,0,0,0}  A[0]=healer A={healer,0,0,0,Archer}

        for(int i=0; i<5; i++){
            sortedArmy.add(null);
        }
        for(Army ar : setOfArmy){
            if( ar instanceof Mage){
                sortedArmy.set(0, ar);
            }
            else if( ar instanceof Knight){
                sortedArmy.set(1, ar);
            }
            else if( ar instanceof Archer){
                sortedArmy.set(2, ar);
            }
            else if( ar instanceof MythicalCreature){
                sortedArmy.set(3, ar);
            }
            else{
                sortedArmy.set(4, ar);
            }
        }
        return sortedArmy;
    }

    // private List<Army> makeCopiesAndSort(List<Army> setOfArmy, String order){
    //     List<Army> copiedArmySet = new ArrayList<>();
    //     for (Army charactor: setOfArmy){
    //         copiedArmySet.add(charactor);
    //     }

    //     if(order == "Speed"){
    //         Collections.sort(copiedArmySet, Comparator.comparingDouble(a -> a.getSpeed()));
    //     }
    //     else if (order == "Defence"){
    //         Collections.sort(copiedArmySet, Comparator.comparingDouble(a -> a.getDefence()));
    //     }

    //     return copiedArmySet;
        
    // }

    // private List<Army> sameAttribute(List<Army> setOfArmy, String type){
    //     List<Army> sameAttributeArmy = new ArrayList<>();

    //     if(type == "Speed"){
    //         for(Army charactor: setOfArmy){
    //             if(setOfArmy.get(4).getSpeed() == charactor.getSpeed()){
    //                 sameAttributeArmy.add(charactor);
    //             }
    //         }
    //     }
    //     else if (type == "Defence"){
    //         for(Army charactor: setOfArmy){
    //             if(setOfArmy.get(0).getDefence() == charactor.getDefence()){
    //                 sameAttributeArmy.add(charactor);
    //             }
    //         }
    //     }
    //     return sameAttributeArmy;
    // }

    public void stratWar(List<Army> userArmy,List<Army> npcArmy){

        // List<Army> userArmyCopy1 = makeCopiesAndSort(userArmy, "Speed"),
        //             userArmyCopy2 = makeCopiesAndSort(userArmy, "Defence"),
        //             npcArmyCopy1 = makeCopiesAndSort(npcArmy, "Speed"),
        //             npcArmyCopy2 = makeCopiesAndSort(npcArmy, "Defence");

      // List<Army> sameSpeedUserArmy = sameAttribute(userArmyCopy1, "Speed"),
        //             sameDefUserArmy = sameAttribute(userArmyCopy2, "Defence"),
        //             sameSpeedNpcArmy = sameAttribute(npcArmyCopy1, "Speed"),
        //             sameDefNpcArmy = sameAttribute(npcArmyCopy2, "Defence");

        int truns = 10;

        while(truns-- >0){
            Collections.sort(userArmy, Comparator.comparingDouble(a -> a.getSpeed())); //5
            Collections.sort(npcArmy, Comparator.comparingDouble(a -> a.getDefence()));//1

            //{a, k, m, o, d} // d<o<m , a>k //d=m=o, a=k // // {k, a, d, o, m}
        }
    }
    
}


// for(Army ar : userArmyCopy1){
//     System.out.print(ar.getName()+ " ");
// }System.out.println("========");

// for(Army ar : userArmyCopy2){
//     System.out.print(ar.getName()+ " ");
// }System.out.println("========");

// for(Army ar : npcArmyCopy1){
//     System.out.print(ar.getName()+ " ");
// }System.out.println("========");

// for(Army ar : npcArmyCopy2){
//     System.out.print(ar.getName()+ " ");
// }System.out.println("========");

// for(Army ar : sameSpeedUserArmy){
//     System.out.print(ar.getName()+ " ");
// }System.out.println("========");

// for(Army ar : sameDefUserArmy){
//     System.out.print(ar.getName()+ " ");
// }System.out.println("========");

// for(Army ar : sameSpeedNpcArmy){
//     System.out.print(ar.getName()+ " ");
// }System.out.println("========");

// for(Army ar : sameDefNpcArmy){
//     System.out.print(ar.getName()+ " ");
// }System.out.println("========");

