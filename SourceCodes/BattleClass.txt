import java.util.ArrayList;
import java.util.Collections;
import java.util.Comparator;
import java.util.List;

public class Battle {
    
    public void winWar(Player user, Player npc, boolean win){
        double newUserCoins,newNpcCoins;
        if(win){
            newUserCoins = user.getCoin() + npc.getCoin()*0.1;
            user.setCoins(newUserCoins);

            newNpcCoins = npc.getCoin() - npc.getCoin()*0.1;
            npc.setCoins(newNpcCoins);
        }
        else{
            newUserCoins = npc.getCoin() + user.getCoin()*0.1;
            npc.setCoins(newUserCoins);

            newNpcCoins = user.getCoin() - user.getCoin()*0.1;
            user.setCoins(newNpcCoins);
        }
    }

    private List<Army> makeCopiesAndSort(List<Army> setOfArmy, String order){
        List<Army> copiedArmySet = new ArrayList<>();
        for (Army charactor: setOfArmy){
            copiedArmySet.add(charactor);
        }

        if(order == "Speed"){
            Collections.sort(copiedArmySet, Comparator.comparingInt(a -> a.getSpeed()));
        }
        else if (order == "Defence"){
            Collections.sort(copiedArmySet, Comparator.comparingInt(a -> a.getDefence()));
        }

        return copiedArmySet;
        
    }

    private List<Army> sameAttribute(List<Army> setOfArmy, String type){
        List<Army> sameAttributeArmy = new ArrayList<>();

        if(type == "Speed"){
            for(Army charactor: setOfArmy){
                if(setOfArmy.get(4).getSpeed() == charactor.getSpeed()){
                    sameAttributeArmy.add(charactor);
                }
            }
        }
        else if (type == "Defence"){
            for(Army charactor: setOfArmy){
                if(setOfArmy.get(0).getDefence() == charactor.getDefence()){
                    sameAttributeArmy.add(charactor);
                }
            }
        }
        return sameAttributeArmy;
    }

    public void stratWar(List<Army> userArmy,List<Army> npcArmy){

        List<Army> userArmyCopy1 = makeCopiesAndSort(userArmy, "Speed"),
                    userArmyCopy2 = makeCopiesAndSort(userArmy, "Defence"),
                    npcArmyCopy1 = makeCopiesAndSort(npcArmy, "Speed"),
                    npcArmyCopy2 = makeCopiesAndSort(npcArmy, "Defence");

        List<Army> sameSpeedUserArmy = sameAttribute(userArmyCopy1, "Speed"),
                    sameDefUserArmy = sameAttribute(userArmyCopy2, "Defence"),
                    sameSpeedNpcArmy = sameAttribute(npcArmyCopy1, "Speed"),
                    sameDefNpcArmy = sameAttribute(npcArmyCopy2, "Defence");

        for(Army ar : userArmyCopy1){
            System.out.print(ar.getName()+ " ");
        }System.out.println("========");

        for(Army ar : userArmyCopy2){
            System.out.print(ar.getName()+ " ");
        }System.out.println("========");

        for(Army ar : npcArmyCopy1){
            System.out.print(ar.getName()+ " ");
        }System.out.println("========");

        for(Army ar : npcArmyCopy2){
            System.out.print(ar.getName()+ " ");
        }System.out.println("========");

        for(Army ar : sameSpeedUserArmy){
            System.out.print(ar.getName()+ " ");
        }System.out.println("========");

        for(Army ar : sameDefUserArmy){
            System.out.print(ar.getName()+ " ");
        }System.out.println("========");

        for(Army ar : sameSpeedNpcArmy){
            System.out.print(ar.getName()+ " ");
        }System.out.println("========");

        for(Army ar : sameDefNpcArmy){
            System.out.print(ar.getName()+ " ");
        }System.out.println("========");

        int truns = 10;

        while(truns-- >0){
            Collections.sort(userArmy, Comparator.comparingInt(a -> a.getSpeed())); //5
            Collections.sort(npcArmy, Comparator.comparingInt(a -> a.getDefence()));//1

        }
    }
    
}
